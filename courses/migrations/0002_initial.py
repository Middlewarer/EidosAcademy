# Generated by Django 5.2.6 on 2025-10-01 21:04

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('courses', '0001_initial'),
        ('users', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='review',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='users.userprofile'),
        ),
        migrations.AddField(
            model_name='content',
            name='topic',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='courses.topic'),
        ),
        migrations.AddField(
            model_name='topicsblock',
            name='course',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='blocks', to='courses.course'),
        ),
        migrations.AddField(
            model_name='topic',
            name='block',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='topics', to='courses.topicsblock'),
        ),
        migrations.AddField(
            model_name='usertopicprogress',
            name='finished_contents',
            field=models.ManyToManyField(related_name='finished_contents', to='courses.content'),
        ),
        migrations.AddField(
            model_name='usertopicprogress',
            name='topic',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='courses.topic'),
        ),
        migrations.AddField(
            model_name='usertopicprogress',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='review',
            unique_together={('user', 'course')},
        ),
    ]
